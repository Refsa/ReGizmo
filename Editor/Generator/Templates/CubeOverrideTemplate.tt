<#@ template debug="true" language="C#" #>
<#@ output extension=".cs" #>
<#@ assembly name="UnityEngine" #>
<#@ assembly name="ReGizmo" #>
<#@ assembly name="ReGizmo.Editor" #>
<#@ import namespace="UnityEngine" #>
<#@ import namespace="ReGizmo.Generator" #>
<#
var variables = new Variable[] {
    new Variable(typeof(Vector3), "position", "currentPosition", "position"),
    new Variable(typeof(Quaternion), "rotation", "currentRotation", "rotation"),
    new Variable(typeof(Vector3), "scale", "currentScale", "scale"),
    new Variable(typeof(Color), "color", "currentColor", "color") 
}

var permutations = Permutation.GenerateOverrides(variables);
#>
<##>
<##>
using UnityEngine;

namespace ReGizmo.Drawing
{
    public partial class ReDraw
    {
        public static void Cube(<#= parameters.ToString() #>)
        {
            if (ReGizmoResolver<ReGizmoCubeDrawer>.TryGet(out var drawer))
            {
                ref var shaderData = ref drawer.GetShaderData();

                shaderData.Position = position;
                shaderData.Color = color;
                shaderData.Scale = scale;
                shaderData.Rotation = rotation.eulerAngles * Mathf.Deg2Rad;
            }
        }
    }
}