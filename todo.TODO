General:
    - @low Sorting between drawers is kinda whack atm
        for example: Lines at -10f is drawing over sprites at 1f, but not at -1f
    - @high Legacy currently doesnt render in game view when outside of play mode, would be a nice thing but not a huge deal
    - @critical ensure proper frustum culling is done
        This is mostly ignore now, need to set up proper render bounds in the draw call and
        offset the vertices in the shader
        Probably wont find a "perfect" solution as one instance might be several times larger than another
    - @low Wireframe shader highlights faces on the back that has normals towards the camera
        probably need another heuristic to also account for depth and not just surface normal against view direction
    - @low Persisting draw-calls, where the user can define a time/duration it will be active for

Sprite Drawer:
    - @low Make base for Sprite Drawer a texture drawer with UVs so the same drawer can be shared for each sprite texture
    
2D Drawing:
    - @critical Make sure 2D shapes works for HDRP/URP
    - @high Pixel scaling doesnt work for axis aligned and billboard aligned drawing modes
    - @low Polygon drawing
        SDF is an option here to avoid having to generate a mesh on the CPU side,
        but the generated mesh can be cached
    Circles:
        - @high Requires some more work on the sampling side with smaller inner radius
        - @low for some reason culling needs to be off for it to render, probably related to the normal the quad is generated around
    Triangle:
        - @high Triangles are now centered on the Quad
    Arrows:
        - @high Line overlaps with arrow, should probably reduce length of line to start of triangle base
    Lines:
        - @low move some of the unique stuff for screenspace line from LineUtils into Line shader

3D Outline:
    - @high Another mode for wireframe is just the general outline or shape, this is needed for all the basic shapes, at least those present for Physics
        Should probably replace all the current wireframe drawers with this, except the custom mesh / mesh wireframes
        Can either be done with SDF or by using Lines
            Lines requires more work on CPU side to offload generating the vertices (Burst/Threading)
            SDF is very cheap on the CPU side, but can get expensive to do on the GPU with many instances

Physics:
    - @high Helpers for 2D Physics
    - @high more Helpers for 3D Physics

Lines:
    - @low Poly lines needs proper miters, mostly a requirements for thicker lines

Generator:
    - @low Code Generator is extremely hard-coded atm, so some work here would be nice
        f.ex. Lines are currently not generated, since they require a more sophisticated generator to work
        In general, this work is mostly unecessary since it's a utility only used in development and not in production

Testing:
    - ShaderDataBuffer should have test cases
    - ComputeBufferPool should have test cases
    - ComputeArray should have test cases

Archive:
  ✔ @high figure out best way to do scaling/default scaling @done(21-05-12 09:18) @project(General)
  ✔ @low Can probably slightly optimize the data transfer from PolyLine into the Drawer by storing an internal struct in the PolyLine equal to the shader data @done(21-05-12 08:10) @project(Lines)
  ✔ @high Need a system for adding end-caps to lines, this will be easier when 2D drawers are added @done(21-05-11 17:18) @project(Lines)
    It can be as simple as adding an enum for all the end cap types that is used together with the Line call
    and then calling the draw method for the 2D shapes
    For now only Arrows are used, might expand on this in the future but it's largely uncessessary
  ✔ @low clean up some of the #pragma targets in shaders @done(21-05-11 17:16) @project(General)
  ✔ @low backface culling on wireframe shader @done(21-05-11 17:16) @project(General)
  ✔ @high One option is to use SDF for everything, although it is expensive it's probably the easiest way to support 2D shapes @done(21-05-11 11:21) @project(2D Drawing)
    SDFs also has the huge benefit of easily producing nice AA, so the cost might be worth it
  ✔ font should scale by pixels @done(21-05-08 13:06) @project(General)
  ✔ SDF Font Shader is fucked in in general, seems like the sampling is off for thinner fonts @done(21-05-08 13:06) @project(General)
  ✘ Scopes doesnt work on font drawers @cancelled(21-05-06 14:33) @project(General)
  ✔ Change font to scale in screenspace (like lines) @done(21-05-06 13:52) @project(General)
  ✔ World space lines @done(21-05-06 13:51) @project(Line Drawer)
  ✔ Currently not implemented @done(21-05-06 13:51) @project(Poly Line Drawer)
  ✔ Gotta clean up the line drawer shaders @done(21-05-06 13:51) @project(Line Drawer)
  ✔ ortho scaling on Icon drawer @done(21-05-06 13:29) @project(General)
  ✔ Change icons to scale in screenspace (like lines) @done(21-05-06 13:29) @project(General)
  ✔ Any GPU buffers are not cleared up atm @done(21-05-06 13:17) @project(General)
  ✔ Should probably move Graphics calls to CommandBuffer instead @done(21-05-03 06:29) @project(General)
  ✔ event hooks are not attaching after exiting playmode outside of dev project @done(21-05-03 05:47) @project(General)
