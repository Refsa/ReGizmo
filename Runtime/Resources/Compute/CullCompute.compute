#include "../Shaders/Utils/ShaderProperties.cginc"

#pragma kernel Mesh_CameraCulling
 
int _Count;
float4 _CameraFrustum[6];
float2 _CameraClips;

StructuredBuffer<MeshProperties> _MeshInput;
AppendStructuredBuffer<MeshProperties> _MeshOutput;

bool box_inside_frustum( float3 center, float3 extents );

void mesh_get_bounding_box( MeshProperties prop, out float3 center, out float3 extents );
[numthreads(64,1,1)]
void Mesh_CameraCulling (uint3 id : SV_DispatchThreadID)
{
    [branch] if (id.x >= _Count) return;

    MeshProperties ld = _MeshInput[id.x];

    /* float3 center = 0; float3 extents = 0;
    mesh_get_bounding_box(ld, center, extents); */

    _MeshOutput.Append(ld); 
}

inline void mesh_get_bounding_box( MeshProperties prop, out float3 center, out float3 extents )
{
    center = 0;
    extents = 0;

    float3 pos = prop.Position;
    float3 size = prop.Scale;
}
 
inline bool box_inside_frustum( float3 center, float3 extents )
{

}